#pragma once

#include "FbxModel.h"
#include "Camera.h"

#include <Windows.h>
#include <wrl.h>
#include <d3d12.h>
#include <d3dx12.h>
#include <string>
#include <DirectXMath.h>

class FbxObject3d
{
protected: // エイリアス
	// Microsoft::WRL::を省略
	template <class T> using ComPtr = Microsoft::WRL::ComPtr<T>;
	// DirectX::を省略
	using XMFLOAT2 = DirectX::XMFLOAT2;
	using XMFLOAT3 = DirectX::XMFLOAT3;
	using XMFLOAT4 = DirectX::XMFLOAT4;
	using XMVECTOR = DirectX::XMVECTOR;
	using XMMATRIX = DirectX::XMMATRIX;
public: // 静的メンバ関数
	// setter
	static void SetDevice(ID3D12Device* device){FbxObject3d::device = device;}
	static void SetCamera(Camera* camera) { FbxObject3d::camera = camera; }
private:
	// デバイス
	static ID3D12Device* device;
	// カメラ
	static Camera* camera;
public: // サブクラス
	// 定数バッファ用データ構造体
	struct ConstBufferDataTransform
	{
		XMMATRIX viewproj;	// ビュープロジェクション行列
		XMMATRIX world;		// ワールド行列
		XMFLOAT3 cameraPos;	// カメラ座標（ワールド座標）
	};
public: // メンバ関数
	/// <summary>
	/// 初期化
	/// </summary>
	void Initialize();
<<<<<<< HEAD
protected: // メンバ変数
=======
	/// <summary>
	/// グラフィックスパイプラインの生成
	/// </summary>
	static void CreateGraphicsPipeline();
	/// <summary>
	/// 毎フレーム処理
	/// </summary>
	void Update();
	/// <summary>
	/// モデルのセット
	/// </summary>
	/// <param name="model">モデル</param>
	void SetModel(FbxModel* fbxModel) { this->fbxModel = fbxModel; }
	/// <summary>
	/// 描画
	/// </summary>
	void Draw(ID3D12GraphicsCommandList* cmdList);

	// 座標の設定
	void SetPosition(XMFLOAT3 position) { this->position = position; }
private: // メンバ変数
>>>>>>> Error
	// 定数バッファ
	ComPtr<ID3D12Resource> constBufferTransform;
};

